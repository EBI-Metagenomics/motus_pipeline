manifest {
    mainScript = 'main.nf'
}

params {
    outdir = 'results'

    min_length = 10
    polya_trim = 10
    qualified_quality_phred = 15
    unqualified_percent_limit = 10

    name = "mgtest"
    reads = 'tests/modules/fixtures/bwa/'
    mode = 'paired'

    decontamination_indexes_folder = 'tests/modules/fixtures/bwa/ref/'
    decontamination_reference_index = 'GRCh38_chr10.fasta'

    // mapseq
    mapseq_db  = '.'
    mapseq_taxonomy = '.'
    mapseq_seq = '.'

    // krona
    otu = '.'

    // mapseq2biom
    mapseq = '.'
    otu_ref = '.'
    otu_label = '.'

    // cmsearch
    sequences = '.'
    covariance_model_database_ribo = '.'
    covariance_model_database_other = '.'
    clan_information = '.'
    lsu_db = "."
    lsu_tax = "."
    lsu_otu = "."
    lsu_label = "LSU"

    ssu_db = "."
    ssu_tax = "."
    ssu_otu = "."
    ssu_label = "SSU"

    // motus
    motus_db = '.'
}

profiles {

    lsf {
        workDir = params.workdir
        executor {
            name = "lsf"
            queueSize = 200
        }
        process.cache = "lenient"
    }

    singularity {
        singularity {
            enabled = true
            autoMounts = true
            cacheDir = params.singularity_cachedir
        }
    }

    ebi {
        params {
            outdir = "results"
            name = ""
            mode = 'single'

            workdir = "/hps/nobackup/rdf/metagenomics/nextflow-jobstore/motus_pipeline"
            singularity_cachedir = "/hps/nobackup/rdf/metagenomics/singularity_cache_nextflow/"

            min_length = 10
            polya_trim = 10
            qualified_quality_phred = 15
            unqualified_percent_limit = 10

            reads = ""

            decontamination_indexes_folder = '/hps/nobackup/rdf/metagenomics/service-team/ref-dbs/bwa/bwa-mem2-mbc/'
            decontamination_reference_index = 'hg38.fa'

            motus_db = "/hps/software/users/rdf/metagenomics/service-team/software/motus/db_mOTU/"
            covariance_model_database_ribo = "/hps/nobackup/rdf/metagenomics/service-team/production/ref-dbs/mgnify-v5/Rfam/ribosomal/RF*.cm"
            covariance_model_database_other = "/hps/nobackup/rdf/metagenomics/service-team/production/ref-dbs/mgnify-v5/Rfam/other/*.cm"
            clan_information = "/hps/nobackup/rdf/metagenomics/service-team/production/ref-dbs/mgnify-v5/Rfam/ribosomal/ribo.claninfo"

            lsu_db = "/hps/nobackup/rdf/metagenomics/service-team/production/ref-dbs/mgnify-v5/silva_lsu/LSU.fasta"
            lsu_tax = "/hps/nobackup/rdf/metagenomics/service-team/production/ref-dbs/mgnify-v5/silva_lsu/slv_lsu_filtered2.txt"
            lsu_otu = "/hps/nobackup/rdf/metagenomics/service-team/production/ref-dbs/mgnify-v5/silva_lsu/lsu2.otu"
            lsu_label = "LSU"

            ssu_db = "/hps/nobackup/rdf/metagenomics/service-team/production/ref-dbs/mgnify-v5/silva_ssu/SSU.fasta"
            ssu_tax = "/hps/nobackup/rdf/metagenomics/service-team/production/ref-dbs/mgnify-v5/silva_ssu/slv_ssu_filtered2.txt"
            ssu_otu = "/hps/nobackup/rdf/metagenomics/service-team/production/ref-dbs/mgnify-v5/silva_ssu/ssu2.otu"
            ssu_label = "SSU"
        }
        workDir = params.workdir

        executor {
            name = "lsf"
            queueSize = 200
        }
        process.cache = "lenient"

        singularity {
            enabled = true
            autoMounts = true
            cacheDir = params.singularity_cachedir
        }

        process {
            withLabel: process_bigmem {
                queue = 'bigmem'
            }
        }
    }

    local {
         docker {
            enabled = true
            fixOwnership = true
            autoMounts = true
        }
        executor {
            name = "local"
            cpus = 2
        }
    }
}